#!/bin/bash 

uNames=`uname -s`
osName=${uNames: 0: 4}

if [ "$osName" != "Linu" ]; then
    echo "Sorry, this script only supports Linux."
    exit
fi

if [ "$1" == "-i" ]||[ "$1" == "--information" ]; then
    echo "
    #########################################################################	
    # File Name: .runner.sh
    # Author: 潘一萱
    # mail: 1138401083@qq.com
    # version: 1.3
    # Created Time: 2022年06月19日 星期日 11时00分27秒
    #########################################################################
    "

elif [ "$1" == "-h" ]||[ "$1" == "" ]; then
    echo "
    Usage:
      runner [options] [file ...]      Edit file(s)
      runner [options] -t <tag>        Edit file where tag is defined
      runner [options] -q [errorfile]  Edit file with first error
    Options:
      --                    Only file names after this
      +                     Start at end of file
      --cmd <cmd>           Execute <cmd> before any config
      +<cmd>, -c <cmd>      Execute <cmd> after config and first file
      
      -a                    Add your own options
      -h                    Show man page entries
      -i                    Show script information
      -u                    Run the specified file
      "

elif [ "$1" == "-u" ]; then

    function IsSuffix() {
        local filename="$2"
        local suffix="$3"
        if [ "$(FileSuffix ${filename})" = "$suffix" ]; then
            return 0
        else
            return 1
        fi
    }

    file=$2
    if [ "${file##*.}"x = "py"x ];then

    echo "  "  
    python3 $2

    elif [ "${file##*.}"x = "java"x ];then
        
        echo "  "    
        javac $2
        java ${file%.*}

    elif [ "${file##*.}"x = "c"x ];then

        echo "  "
        gcc $2
        ./a.out

    elif [ "${file##*.}"x = "html"x ];then
        
        echo "  "
        firefox $2

    elif [ "${file##*.}"x = "md"x ];then

        echo "  "
        typora $2

    elif [ "${file##*.}"x = "pdf"x ]||[ "${file##*.}"x = "doc"x ]||[ "${file##*.}"x = "docx"x ]||[ "${file##*.}"x = "xlsx"x ]||[ "${file##*.}"x = "excel"x ]||[ "${file##*.}"x = "mp4"x ];then
        
        echo "  "
        xdg-open $2

    elif [ "${file##*.}"x = "png"x ]||[ "${file##*.}"x = "webp"x ]||[ "${file##*.}"x = "jpm"x ];then

        echo "  "
        fim -a $2

    elif [ "${file##*.}"x = "mp3"x ];then

        echo " ﱘ "
        play $2 

    elif [ "${file##*.}"x = "deb"x ];then
        echo "  "

        a=`uname  -a`

        b="Darwin"
        c="centos"
        d="ubuntu"
        e="archlinux"

        if [[ $a =~ $c ]];then
            echo "Sorry, you can't get it."
        elif [[ $a =~ $d ]];then
            sudo dpkg -i $2
        elif [[ $a =~ $e ]];then
            sudo debtap -q $2
            sudo pacman -U ${file%.*}.tar.xz
        else
            echo $a
            echo "Sorry, this script only supports Linux(debian/arch)"
            exit
        fi

    elif [ "${file##*.}"x = "zip"x ]; then
        echo "  "
        unzip $2

    elif [ "${file##*.}"x = "tar.xz"x ]; then
        echo "  "
        tar -zxvf $2

    fi
else
    echo "runner: Argument missing after: "$1""
    echo 'More info with "runner -h" '
fi
